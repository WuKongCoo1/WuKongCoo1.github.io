{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"2c1e694ed033517be89cec01f5f5efbeb3bb25ce","modified":1566277932631},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1565947710331},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1565947710332},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1565947710332},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1565947710332},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1565947710333},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1565947710333},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1565947710333},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1565947710333},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1565947710333},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1565947710333},{"_id":"themes/next/README.cn.md","hash":"263b74f1ac7c0f6f9424b8cced4b0b320ae61efc","modified":1565947710334},{"_id":"themes/next/README.md","hash":"287c7e6b7a6ddf75d815dda0df8bd228e3f285c5","modified":1565947710334},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1565947710334},{"_id":"themes/next/_config.yml","hash":"13040a8a70268e7e50dff5318b06532aea3816e6","modified":1566200100827},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1565947710334},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1565947710352},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1566200135150},{"_id":"source/_posts/C-中调用OC代码.md","hash":"3308792cfd93721f977fc5fdb34f13d848b53c93","modified":1566278851525},{"_id":"source/_posts/Mac-OpenGL环境搭建.md","hash":"502c5ee0be645928ebc7be4dd477152d160988d3","modified":1566277995677},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1565943873729},{"_id":"source/_posts/initial-blog.md","hash":"7d5bf8ad255f96bcb8f534fe5671ce5d124fedb0","modified":1566199957963},{"_id":"source/tags/index.md","hash":"91e1a612f412ac925564fd8eb6083c3e71c0b881","modified":1566199076218},{"_id":"source/categories/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1566198972583},{"_id":"source/categories/index.md","hash":"086101db89e861a8707f9a79c0db462dc748d7de","modified":1566200741907},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1565947710324},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1565947710326},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1565947693854},{"_id":"themes/next/.git/index","hash":"faa96332f8d303c6112fe0c417a4da385921b9b6","modified":1565947724223},{"_id":"themes/next/.git/packed-refs","hash":"3bb2e8e3fad44742d3e3bfadfb0b4d791fe9fe9e","modified":1565947710322},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"50d48c47162817a3810a9d9ad51104e83947419a","modified":1565947710332},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1565947710332},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1565947710332},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1565947710332},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1565947710335},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1565947710335},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1565947710335},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1565947710335},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1565947710335},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1565947710335},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1565947710335},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1565947710336},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1565947710336},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1565947710336},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1565947710336},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1565947710336},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1565947710336},{"_id":"themes/next/languages/zh-Hans.yml","hash":"d8f16e8e1119602878da322f5feca099c60815bc","modified":1566197071926},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1565947710337},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1565947710337},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1565947710337},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1565947710351},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1565947710351},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1565947710351},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1565947710351},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1565947710351},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1565947710352},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1565947710352},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1565947710352},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1565947710353},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1565947710415},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1565947710416},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1565947710416},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1565947710373},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1565947693856},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1565947693855},{"_id":"themes/next/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1565947693856},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1565947693857},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1565947693858},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1565947693856},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1565947693858},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1565947693855},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1565947693857},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1565947693857},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1565947693859},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1565947693853},{"_id":"themes/next/.git/logs/HEAD","hash":"d73e4e82755d2517044815174fa73ad9206b0f85","modified":1565947710325},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1565947710337},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1565947710337},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1565947710338},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1565947710338},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1565947710338},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1565947710338},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1565947710338},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1565947710340},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1565947710340},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1565947710340},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1565947710340},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1565947710341},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1565947710341},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1565947710342},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1565947710342},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1565947710343},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1565947710343},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1565947710344},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1565947710348},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1565947710348},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1565947710349},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1565947710349},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1565947710349},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1565947710349},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1565947710349},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1565947710353},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1565947710353},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1565947710354},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1565947710354},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1565947710354},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1565947710354},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1565947710354},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1565947710354},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1565947710354},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1565947710373},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1565947710374},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1565947710374},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1565947710374},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1565947710375},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1565947710375},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1565947710375},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1565947710375},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1565947710376},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1565947710376},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1565947710376},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1565947710376},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1565947710376},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1565947710377},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1565947710377},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1565947710377},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1565947710377},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1565947710377},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1565947710377},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1565947710344},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1565947710344},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1565947710368},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1565947710368},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1565947710368},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1565947710372},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1565947710373},{"_id":"themes/next/.git/refs/heads/master","hash":"3c959678e3fe6e51e935526c19927d21443a3be3","modified":1565947710324},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1565947710341},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1565947710341},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1565947710342},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1565947710342},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1565947710342},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1565947710342},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1565947710343},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1565947710343},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1565947710343},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1565947710344},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1565947710344},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1565947710344},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1565947710344},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1565947710345},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1565947710345},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1565947710345},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1565947710345},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1565947710345},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1565947710345},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1565947710345},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1565947710346},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1565947710346},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1565947710346},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1565947710346},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1565947710346},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1565947710346},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1565947710347},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1565947710347},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1565947710347},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1565947710347},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1565947710347},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1565947710348},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1565947710348},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1565947710348},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1565947710350},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1565947710350},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1565947710350},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1565947710350},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1565947710367},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1565947710367},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1565947710368},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1565947710368},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1565947710372},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1565947710372},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1565947710372},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1565947710372},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1565947710377},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1565947710378},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1565947710378},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1565947710378},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1565947710378},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1565947710378},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1565947710378},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1565947710379},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1565947710379},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1565947710379},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1565947710379},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1565947710382},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1565947710385},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1565947710385},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1565947710386},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1565947710386},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1565947710389},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1565947710389},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1565947710390},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1565947710390},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1565947710391},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1565947710392},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1565947710392},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1565947710392},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1565947710392},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1565947710403},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1565947710404},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1565947710404},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1565947710404},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1565947710404},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1565947710404},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1565947710404},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1565947710405},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1565947710405},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1565947710405},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1565947710405},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1565947710406},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1565947710406},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1565947710406},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1565947710406},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1565947710406},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1565947710406},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1565947710406},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1565947710407},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1565947710407},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1565947710407},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1565947710407},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1565947710407},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1565947710407},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1565947710408},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1565947710408},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1565947710408},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1565947710412},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1565947710412},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1565947710413},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1565947710414},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1565947710414},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1565947710403},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"d73e4e82755d2517044815174fa73ad9206b0f85","modified":1565947710325},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1565947710323},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1565947710349},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1565947710350},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1565947710355},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1565947710355},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1565947710355},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1565947710355},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1565947710355},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1565947710358},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1565947710362},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1565947710366},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1565947710366},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1565947710366},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1565947710366},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1565947710367},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1565947710367},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1565947710367},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1565947710368},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1565947710369},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1565947710369},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1565947710369},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1565947710369},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1565947710369},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1565947710369},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1565947710369},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1565947710370},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1565947710370},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1565947710370},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1565947710371},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1565947710370},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1565947710371},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1565947710371},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1565947710371},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1565947710371},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1565947710371},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1565947710372},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1565947710379},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1565947710382},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1565947710382},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1565947710386},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1565947710386},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1565947710386},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1565947710386},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1565947710386},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1565947710387},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1565947710388},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1565947710388},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1565947710389},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1565947710391},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1565947710391},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1565947710393},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1565947710393},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1565947710394},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1565947710411},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1565947710411},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1565947710381},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1565947710381},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1565947710403},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1565947710402},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1565947710413},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"d73e4e82755d2517044815174fa73ad9206b0f85","modified":1565947710323},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1565947710355},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1565947710356},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1565947710356},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1565947710356},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1565947710356},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1565947710356},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1565947710357},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1565947710357},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1565947710357},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1565947710357},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1565947710357},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1565947710358},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1565947710358},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1565947710358},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1565947710361},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1565947710361},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1565947710361},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1565947710361},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1565947710361},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1565947710361},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1565947710362},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1565947710362},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1565947710362},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1565947710362},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1565947710358},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1565947710358},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1565947710358},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1565947710359},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1565947710359},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1565947710359},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1565947710359},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1565947710359},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1565947710359},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1565947710360},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1565947710360},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1565947710360},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1565947710360},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1565947710360},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1565947710360},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1565947710362},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1565947710363},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1565947710363},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1565947710363},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1565947710363},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1565947710363},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1565947710363},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1565947710363},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1565947710364},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1565947710364},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1565947710364},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1565947710364},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1565947710364},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1565947710365},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1565947710365},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1565947710365},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1565947710365},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1565947710365},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1565947710365},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1565947710370},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1565947710370},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1565947710371},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1565947710380},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1565947710380},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1565947710380},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1565947710380},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1565947710381},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1565947710387},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1565947710387},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1565947710387},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1565947710387},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1565947710388},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1565947710388},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1565947710395},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1565947710397},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1565947710402},{"_id":"themes/next/.git/objects/pack/pack-2094ec0f6437d1788a13f0aec9c47f4ed1a77de3.idx","hash":"6507e0cdf986f371d6d304387f789444a7663c56","modified":1565947710303},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1565947710385},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1565947710411},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1565947710400},{"_id":"themes/next/.git/objects/pack/pack-2094ec0f6437d1788a13f0aec9c47f4ed1a77de3.pack","hash":"2ab7a76d496119b851249983db6b500a45c77c47","modified":1565947710296},{"_id":"public/tags/index.html","hash":"e3cc20fd0eacc9906d1b75a038dd9b350f4ca028","modified":1566278886194},{"_id":"public/categories/index.html","hash":"82d481c52d59f7fef09751af3bc94c8ec818e0c8","modified":1566278886194},{"_id":"public/2019/08/19/initial-blog/index.html","hash":"221f31c589a0600089c888de219625b1f4ddf5cc","modified":1566278886194},{"_id":"public/archives/index.html","hash":"943193be65ab4f8f32227e40e273d0e59e4957c8","modified":1566278886194},{"_id":"public/archives/2019/index.html","hash":"9fe283d76f3d229d2582d3b011b4a5097e92fc76","modified":1566278886195},{"_id":"public/archives/2019/08/index.html","hash":"1c7f9b57016858a6f1fec4cdb73220f57df9a6a7","modified":1566278886195},{"_id":"public/categories/sundry/index.html","hash":"2d1e18c7816ab1ca878309f29d6be32888611ffd","modified":1566278886195},{"_id":"public/categories/OpenGL/index.html","hash":"f1bf0999cf1d4483eb3d0669298f890320d7e4ae","modified":1566278886195},{"_id":"public/categories/Objective-C/index.html","hash":"b043541a4b2e9c0a33893c25a7bd30b513d704b3","modified":1566278886195},{"_id":"public/categories/net/index.html","hash":"4a1b02883b118e5d247745bc14db21a7f2abc6a7","modified":1566278886195},{"_id":"public/categories/Cocoa/index.html","hash":"a3e9fab85491e69534bd0eadf50dc0b5b81699d7","modified":1566278886195},{"_id":"public/2019/08/20/C-中调用OC代码/index.html","hash":"31c913006e22a071c8c960d84364ebd875085994","modified":1566278886195},{"_id":"public/2019/08/20/Mac-OpenGL环境搭建/index.html","hash":"adc24944d827c7bae5cb780ee4c926cbcf503181","modified":1566278886195},{"_id":"public/2019/08/16/hello-world/index.html","hash":"396837ac72ee1dc40b31ad6c4b18a4017454cc05","modified":1566278886195},{"_id":"public/index.html","hash":"7a7a237e798637de17e4b60b59761e8a131aafdb","modified":1566278886195},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1566278886200},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1566278886200},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1566278886201},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1566278886201},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1566278886201},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1566278886201},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1566278886201},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1566278886201},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1566278886201},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1566278886201},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1566278886201},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1566278886201},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1566278886201},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1566278886201},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1566278886202},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1566278886202},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1566278886202},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1566278886202},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1566278886202},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1566278886202},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1566278886202},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1566278886202},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1566278886202},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1566278886202},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1566278886202},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1566278886202},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1566278886202},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1566278886202},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1566278886202},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1566278886202},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1566278886202},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1566278886202},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1566278886203},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1566278886618},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1566278886630},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1566278886641},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1566278886641},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1566278886641},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1566278886641},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1566278886641},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1566278886641},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1566278886641},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1566278886641},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1566278886641},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1566278886641},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1566278886642},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1566278886642},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1566278886642},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1566278886642},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1566278886642},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1566278886642},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1566278886642},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1566278886642},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1566278886642},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1566278886642},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1566278886642},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1566278886642},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1566278886642},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1566278886642},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1566278886642},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1566278886642},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1566278886642},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1566278886642},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1566278886643},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1566278886643},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1566278886643},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1566278886643},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1566278886643},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1566278886643},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1566278886643},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1566278886643},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1566278886643},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1566278886643},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1566278886643},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1566278886643},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1566278886643},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1566278886644},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1566278886644},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1566278886644},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1566278886644},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1566278886644},{"_id":"public/lib/fastclick/README.html","hash":"c5a4c05ca80132b7e343d5fd1d1d1a976b4ad151","modified":1566278886644},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"81057e5b518b8ab60474e1ad027e868b558f15b7","modified":1566278886644},{"_id":"public/lib/jquery_lazyload/README.html","hash":"18a600ca1aafd3bf08af52b6a6fe5f056aeed9f4","modified":1566278886644},{"_id":"public/css/main.css","hash":"a8f614699ba0c3ec34ea1e1512e3e0e2f242d67e","modified":1566278886644},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1566278886644},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1566278886644},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1566278886644},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1566278886644},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1566278886644},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1566278886644},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1566278886644},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1566278886644},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1566278886644},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1566278886645},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1566278886645},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1566278886645},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1566278886645},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1566278886645},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1566278886645},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1566278886645},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1566278886645},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1566278886645},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1566278886645},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1566278886645},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1566278886646},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1566278886646},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1566278886646},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1566278886664}],"Category":[{"name":"sundry","_id":"cjzje0a6t0003vms6a6q53ptv"},{"name":"OpenGL","_id":"cjzje0a6x0005vms676yjo5i0"},{"name":"Objective-C","_id":"cjzje0a6y0006vms636qh4014"},{"name":"net","_id":"cjzje0a6z0009vms62pv9n8nw"},{"name":"Cocoa","_id":"cjzje0a6z000avms6d00lmrek"}],"Data":[],"Page":[{"title":"标签","date":"2019-08-16T18:38:24.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2019-08-16 18:38:24\ntype: \"tags\"\ncomments: false\n---\n","updated":"2019-08-19T07:17:56.218Z","path":"tags/index.html","layout":"page","_id":"cjzje0aap000gvms69ugd7tns","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"分类","date":"2014-12-22T12:39:04.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2014-12-22 12:39:04\ntype: \"categories\"\n---\n","updated":"2019-08-19T07:45:41.907Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjzje0aaq000hvms6eiq187c0","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"C++中调用OC代码","date":"2019-08-20T13:16:19.000Z","_content":"# 前言\n\n　　最近项目中为了方便维护，底层统一使用C++编写。由于是项目是做屏幕共享sdk，所以只能底层的压缩、编解码使用C++，屏幕捕获部分Mac和win就自己实现了。那么问题就来了，因为是面向接口编程，所以项目的入口都是c++来写的，而屏幕捕获是需要oc部分的代码，就需要C++调用oc代码了。\n\n# 准备\n\n　　之前只做过OC调动C++，于是Google了一下，在Stack Overflow上找到了这个[回答](https://stackoverflow.com/questions/1061005/calling-objective-c-method-from-c-member-function)。要看具体描述的可以去链接看看，实现思路一共有两种，我在这里大概描述一下。第一种，由于C++是不能直接调用OC的，所以需要通过C语言作为中间层，即C++调用C，C调用OC，这样就达到了C++调用OC的目的。第二种OC是可以调用C++的，通过在外部声名C++类，然后类具体实现放在OC类中，这样C++类就能够调用OC类了，其他需要调用OC的类，只需要调用外部声名的类即可。\n\n# 实现\n\n具体的实现方式有两种，第一种是C语言方法接收oc对象指针和参数，然后把指针桥接为具体的oc对象。第二种是用C++进行包装，先声名一个C++类，这里称为A。然后在OC类中，这里称为B，对A进行实现，因为这个实现实在OC语言里的，所以在这里是可以直接调用OC代码的。接下来声名一个C++类C。类C通过持有类A来调用OC类B，即A（C++）->C（C++）->B(OC类)\n\n　　## 实现方式一 by C\n\n**MyObject-C-Interface.h**\n　　```\n　　int MyObjectDoSomethingWith (void *myObjectInstance, void *parameter);\n　　```\n　　\n**MyObject.h**\n　　```\n　　@interface MyObject : NSObject\n　　{\n　　int someVar;\n　　}\n　　\n\n　　- (int)doSomethingWith:(void *)aParameter;\n　　@end\n\n　　```\n　　**MyObject.mm**\n　　```\n　　@implementation MyObject\n　　\n　　int MyObjectDoSomethingWith (void *self, void *aParameter)\n　　{\n　　// 通过将self指针桥接为oc 对象来调用oc方法\n　　return [(__bridge id)self doSomethingWith:aParameter];\n　　}\n　　\n\n　　- (int) doSomethingWith:(void *) aParameter\n　　{\n　　//将void *指针强转为对应的类型\n　　int* param = (int *)aParameter;\n　　return *param / 2 ;\n　　}\n\n　　- (void)dealloc\n　　{\n　　NSLog(@\"%s\", __func__);\n　　}\n\n　　@end\n　　```\n　　**MyCPPClass.h**\n　　```\n　　class MyCPPClass {\n　　\n　　\n　　public:\n　　MyCPPClass();\n　　~MyCPPClass();\n　　int someMethod (void *objectiveCObject, void *aParameter);\n　　void *self;\n　　\n　　void setSelf(void *self);\n　　};\n　　\n　　```\n　　\n　　**MyCPPClass.cpp**\n　　\n　　```\n\n　　#include \"MyObject-C-Interface.h\"\n\n　　MyCPPClass::MyCPPClass()\n　　{\n　　\n　　}\n　　\n　　MyCPPClass::~MyCPPClass()\n　　{\n　　\n　　}\n　　\n　　\n　　int MyCPPClass::someMethod (void *objectiveCObject, void *aParameter)\n　　{\n　　// To invoke an Objective-C method from C++, use\n　　// the C trampoline function\n　　return MyObjectDoSomethingWith (objectiveCObject, aParameter);\n　　}\n　　\n　　void MyCPPClass::setSelf(void *aSelf)\n　　{\n　　self = aSelf;\n　　}\n　　\n　　```\n　　**main.mm**\n　　\n　　```\n\n　　#include \"MyCPPClass.hpp\"\n　　#import \"MyObject.h\"\n\n　　int main(int argc, const char * argv[]) {\n　　@autoreleasepool {\n　　// insert code here...\n　　NSLog(@\"Hello, World!\");\n　　MyObject *object = [[MyObject alloc] init];\n　　MyCPPClass *c = new MyCPPClass();\n　　c->setSelf((__bridge void *)object);\n　　int a = 12;\n　　int result = c->someMethod((__bridge void *)object, &a);\n　　NSLog(@\"%d\", result);\n　　}\n　　return 0;\n　　}\n　　```\n　　运行结果如下：\n　　![运行结果](https://img2018.cnblogs.com/blog/552616/201906/552616-20190626153439356-1906667270.png)\n　　\n　　**存在的问题**\n　　\n　　\n　　在每次C++调用时都需要传递OC对象桥接为==void *==的指针，使用起来很不方便。\n　　\n　　## 方式二 by C++ IMPL\n　　**MyObject-C-Interface.h**\n　　\n　　```\n　　#ifndef MyObject_C_Interface_h__h\n　　#define MyObject_C_Interface_h__h\n\n　　class MyClassImpl\n　　{\n　　public:\n　　MyClassImpl ( void );\n　　~MyClassImpl( void );\n　　\n　　void init( void );\n　　int  doSomethingWith( void * aParameter );\n　　void logMyMessage( char * aCStr );\n　　\n　　private:\n　　void * self;\n　　};\n　　\n　　#endif /* MyObject_C_Interface_h__h */\n\n　　```\n　　需要注意的是，==MyClassImpl==的实现是放在OC中的\n　　**MyObject.h**\n　　\n　　```\n　　NS_ASSUME_NONNULL_BEGIN\n　　\n　　@interface MyObject : NSObject\n　　{\n　　int someVar;\n　　}\n　　\n　　- (int)  doSomethingWith:(void *) aParameter;\n　　- (void) logMyMessage:(char *) aCStr;\n\n\n　　@end\n　　\n　　NS_ASSUME_NONNULL_END\n　　```\n　　\n　　**MyObject.mm**\n　　\n　　```\n　　#include \"MyObject-C-Interface.h\"\n\n　　typedef void(^RetainSelfBlock)(void);\n　　\n　　@implementation MyObject\n　　{\n　　RetainSelfBlock _retainBlock;//通过这个block持有对象，造成循环引用，避免被释放\n　　}\n　　MyClassImpl::MyClassImpl( void )\n　　: self( NULL )\n　　{\n　　\n　　}\n　　\n　　MyClassImpl::~MyClassImpl( void )\n　　{\n　　[(__bridge id) self breakRetainCycly];\n　　}\n　　\n　　void MyClassImpl::init( void )\n　　{\n　　MyObject *object = [[MyObject alloc] init];\n　　object->_retainBlock = ^{//循环引用\n　　[object class];\n　　};\n　　\n　　self = (__bridge void *)object;\n　　\n　　NSLog(@\"%p\", self);\n　　}\n　　\n　　int MyClassImpl::doSomethingWith( void *aParameter )\n　　{\n　　NSLog(@\"%p\", self);\n　　return [(__bridge id)self doSomethingWith:aParameter];\n　　}\n　　\n　　void MyClassImpl::logMyMessage( char *aCStr )\n　　{\n　　[(__bridge id)self logMyMessage:aCStr];\n　　}\n　　\n　　- (int) doSomethingWith:(void *) aParameter\n　　{\n　　int result = 0;\n\n　　// ... some code to calculate the result\n　　\n　　return result;\n　　}\n　　\n　　- (void) logMyMessage:(char *) aCStr\n　　{\n　　NSLog( @\"%s\", aCStr );\n　　}\n\n　　//打破循环引用，释放对象\n　　- (void) breakRetainCycly\n　　{\n　　_retainBlock = nil;\n　　}\n\n　　- (void)dealloc\n　　{\n　　NSLog(@\"%s\", __func__);\n　　}\n　　@end\n　　```\n　　在==MyObject.mm==中需要注意的是，由于OC是使用ARC来进行内存管理的，C++不能够管理OC对象的生命周期。在默认的情况下，临时变量会在autorelease pool每一次pop后被释放，所以在oc实现中要想对象不被释放，那就需要循环引用来帮忙了。\n\n　　具体代码如下,在MyClassImpl初始化时，利用循环引用保证object不被释放，在MyClassImpl调用析构函数时，将block置空，打破循环引用，以此来释放oc对象\n　　\n　　```\n　　void MyClassImpl::init( void )\n　　{\n　　MyObject *object = [[MyObject alloc] init];\n　　object->_retainBlock = ^{//循环引用\n　　[object class];\n　　};\n　　\n　　self = (__bridge void *)object;\n　　\n　　NSLog(@\"%p\", self);\n　　}\n　　\n　　MyClassImpl::~MyClassImpl( void )\n　　{\n　　[(__bridge id) self breakRetainCycly];\n　　}\n　　\n　　//打破循环引用，释放对象\n　　- (void) breakRetainCycly\n　　{\n　　_retainBlock = nil;\n　　}\n\n　　```\n　　\n　　**MyCPPClass.hpp**\n　　\n　　```\n　　#ifndef MyCPPClass_hpp\n　　#define MyCPPClass_hpp\n\n　　#include <stdio.h>\n\n　　class MyClassImpl;\n　　\n　　class MyCPPClass\n　　{\n　　enum { cANSWER_TO_LIFE_THE_UNIVERSE_AND_EVERYTHING = 42 };\n　　public:\n　　MyCPPClass ( void );\n　　~MyCPPClass( void );\n　　\n　　void init( void );\n　　void doSomethingWithMyClass( void );\n　　\n　　private:\n　　MyClassImpl * _impl;\n　　int           _myValue;\n　　};\n　　\n　　\n　　#endif /* MyCPPClass_hpp */\n　　```\n　　\n　　**MyCPPClass.cpp**\n　　\n　　```\n　　#include \"MyCPPClass.hpp\"\n　　#include \"MyObject-C-Interface.h\"\n\n　　MyCPPClass::MyCPPClass( void )\n　　: _impl ( NULL )\n　　{   }\n　　\n　　void MyCPPClass::init( void )\n　　{\n　　_impl = new MyClassImpl();\n　　_impl->init();\n　　}\n　　\n　　MyCPPClass::~MyCPPClass( void )\n　　{\n　　if ( _impl ) { delete _impl; _impl = NULL; }\n　　}\n　　\n　　void MyCPPClass::doSomethingWithMyClass( void )\n　　{\n　　int result = _impl->doSomethingWith(&_myValue);\n　　if ( result == cANSWER_TO_LIFE_THE_UNIVERSE_AND_EVERYTHING )\n　　{\n　　_impl->logMyMessage(\"Hello, Arthur!\");\n　　}\n　　else\n　　{\n　　_impl->logMyMessage(\"Don't worry.\");\n　　}\n　　}\n　　```\n　　\n　　**main.mm**\n　　\n　　```\n　　#include \"MyCPPClass.hpp\"\n\n　　int main(int argc, const char * argv[]) {\n　　@autoreleasepool {\n　　MyCPPClass *temp = new MyCPPClass();\n　　temp->init();\n　　temp->doSomethingWithMyClass();\n　　delete temp;\n　　}\n　　return 0;\n　　}\n　　```\n　　**运行结果**\n　　![by c++ IMPL](https://img2018.cnblogs.com/blog/552616/201906/552616-20190626153613056-820038660.png)\n　　\n　　# 总结\n　　第一种通过C语言的方式来调用，使用起来更复杂，所以建议使用C++的方式来实现。需要注意的问题是C++不能管理OC对象的释放，所以需要利用循环引用。\n　　\n　　你可以在这里下载[demo](https://github.com/WuKongCoo1/C-Invoke-OC/tree/master)\n　　\n　　参考：[https://stackoverflow.com/questions/1061005/calling-objective-c-method-from-c-member-function](https://stackoverflow.com/questions/1061005/calling-objective-c-method-from-c-member-function)\n","source":"_posts/C-中调用OC代码.md","raw":"---\ntitle: C++中调用OC代码\ndate: 2019-08-20 13:16:19\ntags:\ncategories:\n- [sundry]\n---\n# 前言\n\n　　最近项目中为了方便维护，底层统一使用C++编写。由于是项目是做屏幕共享sdk，所以只能底层的压缩、编解码使用C++，屏幕捕获部分Mac和win就自己实现了。那么问题就来了，因为是面向接口编程，所以项目的入口都是c++来写的，而屏幕捕获是需要oc部分的代码，就需要C++调用oc代码了。\n\n# 准备\n\n　　之前只做过OC调动C++，于是Google了一下，在Stack Overflow上找到了这个[回答](https://stackoverflow.com/questions/1061005/calling-objective-c-method-from-c-member-function)。要看具体描述的可以去链接看看，实现思路一共有两种，我在这里大概描述一下。第一种，由于C++是不能直接调用OC的，所以需要通过C语言作为中间层，即C++调用C，C调用OC，这样就达到了C++调用OC的目的。第二种OC是可以调用C++的，通过在外部声名C++类，然后类具体实现放在OC类中，这样C++类就能够调用OC类了，其他需要调用OC的类，只需要调用外部声名的类即可。\n\n# 实现\n\n具体的实现方式有两种，第一种是C语言方法接收oc对象指针和参数，然后把指针桥接为具体的oc对象。第二种是用C++进行包装，先声名一个C++类，这里称为A。然后在OC类中，这里称为B，对A进行实现，因为这个实现实在OC语言里的，所以在这里是可以直接调用OC代码的。接下来声名一个C++类C。类C通过持有类A来调用OC类B，即A（C++）->C（C++）->B(OC类)\n\n　　## 实现方式一 by C\n\n**MyObject-C-Interface.h**\n　　```\n　　int MyObjectDoSomethingWith (void *myObjectInstance, void *parameter);\n　　```\n　　\n**MyObject.h**\n　　```\n　　@interface MyObject : NSObject\n　　{\n　　int someVar;\n　　}\n　　\n\n　　- (int)doSomethingWith:(void *)aParameter;\n　　@end\n\n　　```\n　　**MyObject.mm**\n　　```\n　　@implementation MyObject\n　　\n　　int MyObjectDoSomethingWith (void *self, void *aParameter)\n　　{\n　　// 通过将self指针桥接为oc 对象来调用oc方法\n　　return [(__bridge id)self doSomethingWith:aParameter];\n　　}\n　　\n\n　　- (int) doSomethingWith:(void *) aParameter\n　　{\n　　//将void *指针强转为对应的类型\n　　int* param = (int *)aParameter;\n　　return *param / 2 ;\n　　}\n\n　　- (void)dealloc\n　　{\n　　NSLog(@\"%s\", __func__);\n　　}\n\n　　@end\n　　```\n　　**MyCPPClass.h**\n　　```\n　　class MyCPPClass {\n　　\n　　\n　　public:\n　　MyCPPClass();\n　　~MyCPPClass();\n　　int someMethod (void *objectiveCObject, void *aParameter);\n　　void *self;\n　　\n　　void setSelf(void *self);\n　　};\n　　\n　　```\n　　\n　　**MyCPPClass.cpp**\n　　\n　　```\n\n　　#include \"MyObject-C-Interface.h\"\n\n　　MyCPPClass::MyCPPClass()\n　　{\n　　\n　　}\n　　\n　　MyCPPClass::~MyCPPClass()\n　　{\n　　\n　　}\n　　\n　　\n　　int MyCPPClass::someMethod (void *objectiveCObject, void *aParameter)\n　　{\n　　// To invoke an Objective-C method from C++, use\n　　// the C trampoline function\n　　return MyObjectDoSomethingWith (objectiveCObject, aParameter);\n　　}\n　　\n　　void MyCPPClass::setSelf(void *aSelf)\n　　{\n　　self = aSelf;\n　　}\n　　\n　　```\n　　**main.mm**\n　　\n　　```\n\n　　#include \"MyCPPClass.hpp\"\n　　#import \"MyObject.h\"\n\n　　int main(int argc, const char * argv[]) {\n　　@autoreleasepool {\n　　// insert code here...\n　　NSLog(@\"Hello, World!\");\n　　MyObject *object = [[MyObject alloc] init];\n　　MyCPPClass *c = new MyCPPClass();\n　　c->setSelf((__bridge void *)object);\n　　int a = 12;\n　　int result = c->someMethod((__bridge void *)object, &a);\n　　NSLog(@\"%d\", result);\n　　}\n　　return 0;\n　　}\n　　```\n　　运行结果如下：\n　　![运行结果](https://img2018.cnblogs.com/blog/552616/201906/552616-20190626153439356-1906667270.png)\n　　\n　　**存在的问题**\n　　\n　　\n　　在每次C++调用时都需要传递OC对象桥接为==void *==的指针，使用起来很不方便。\n　　\n　　## 方式二 by C++ IMPL\n　　**MyObject-C-Interface.h**\n　　\n　　```\n　　#ifndef MyObject_C_Interface_h__h\n　　#define MyObject_C_Interface_h__h\n\n　　class MyClassImpl\n　　{\n　　public:\n　　MyClassImpl ( void );\n　　~MyClassImpl( void );\n　　\n　　void init( void );\n　　int  doSomethingWith( void * aParameter );\n　　void logMyMessage( char * aCStr );\n　　\n　　private:\n　　void * self;\n　　};\n　　\n　　#endif /* MyObject_C_Interface_h__h */\n\n　　```\n　　需要注意的是，==MyClassImpl==的实现是放在OC中的\n　　**MyObject.h**\n　　\n　　```\n　　NS_ASSUME_NONNULL_BEGIN\n　　\n　　@interface MyObject : NSObject\n　　{\n　　int someVar;\n　　}\n　　\n　　- (int)  doSomethingWith:(void *) aParameter;\n　　- (void) logMyMessage:(char *) aCStr;\n\n\n　　@end\n　　\n　　NS_ASSUME_NONNULL_END\n　　```\n　　\n　　**MyObject.mm**\n　　\n　　```\n　　#include \"MyObject-C-Interface.h\"\n\n　　typedef void(^RetainSelfBlock)(void);\n　　\n　　@implementation MyObject\n　　{\n　　RetainSelfBlock _retainBlock;//通过这个block持有对象，造成循环引用，避免被释放\n　　}\n　　MyClassImpl::MyClassImpl( void )\n　　: self( NULL )\n　　{\n　　\n　　}\n　　\n　　MyClassImpl::~MyClassImpl( void )\n　　{\n　　[(__bridge id) self breakRetainCycly];\n　　}\n　　\n　　void MyClassImpl::init( void )\n　　{\n　　MyObject *object = [[MyObject alloc] init];\n　　object->_retainBlock = ^{//循环引用\n　　[object class];\n　　};\n　　\n　　self = (__bridge void *)object;\n　　\n　　NSLog(@\"%p\", self);\n　　}\n　　\n　　int MyClassImpl::doSomethingWith( void *aParameter )\n　　{\n　　NSLog(@\"%p\", self);\n　　return [(__bridge id)self doSomethingWith:aParameter];\n　　}\n　　\n　　void MyClassImpl::logMyMessage( char *aCStr )\n　　{\n　　[(__bridge id)self logMyMessage:aCStr];\n　　}\n　　\n　　- (int) doSomethingWith:(void *) aParameter\n　　{\n　　int result = 0;\n\n　　// ... some code to calculate the result\n　　\n　　return result;\n　　}\n　　\n　　- (void) logMyMessage:(char *) aCStr\n　　{\n　　NSLog( @\"%s\", aCStr );\n　　}\n\n　　//打破循环引用，释放对象\n　　- (void) breakRetainCycly\n　　{\n　　_retainBlock = nil;\n　　}\n\n　　- (void)dealloc\n　　{\n　　NSLog(@\"%s\", __func__);\n　　}\n　　@end\n　　```\n　　在==MyObject.mm==中需要注意的是，由于OC是使用ARC来进行内存管理的，C++不能够管理OC对象的生命周期。在默认的情况下，临时变量会在autorelease pool每一次pop后被释放，所以在oc实现中要想对象不被释放，那就需要循环引用来帮忙了。\n\n　　具体代码如下,在MyClassImpl初始化时，利用循环引用保证object不被释放，在MyClassImpl调用析构函数时，将block置空，打破循环引用，以此来释放oc对象\n　　\n　　```\n　　void MyClassImpl::init( void )\n　　{\n　　MyObject *object = [[MyObject alloc] init];\n　　object->_retainBlock = ^{//循环引用\n　　[object class];\n　　};\n　　\n　　self = (__bridge void *)object;\n　　\n　　NSLog(@\"%p\", self);\n　　}\n　　\n　　MyClassImpl::~MyClassImpl( void )\n　　{\n　　[(__bridge id) self breakRetainCycly];\n　　}\n　　\n　　//打破循环引用，释放对象\n　　- (void) breakRetainCycly\n　　{\n　　_retainBlock = nil;\n　　}\n\n　　```\n　　\n　　**MyCPPClass.hpp**\n　　\n　　```\n　　#ifndef MyCPPClass_hpp\n　　#define MyCPPClass_hpp\n\n　　#include <stdio.h>\n\n　　class MyClassImpl;\n　　\n　　class MyCPPClass\n　　{\n　　enum { cANSWER_TO_LIFE_THE_UNIVERSE_AND_EVERYTHING = 42 };\n　　public:\n　　MyCPPClass ( void );\n　　~MyCPPClass( void );\n　　\n　　void init( void );\n　　void doSomethingWithMyClass( void );\n　　\n　　private:\n　　MyClassImpl * _impl;\n　　int           _myValue;\n　　};\n　　\n　　\n　　#endif /* MyCPPClass_hpp */\n　　```\n　　\n　　**MyCPPClass.cpp**\n　　\n　　```\n　　#include \"MyCPPClass.hpp\"\n　　#include \"MyObject-C-Interface.h\"\n\n　　MyCPPClass::MyCPPClass( void )\n　　: _impl ( NULL )\n　　{   }\n　　\n　　void MyCPPClass::init( void )\n　　{\n　　_impl = new MyClassImpl();\n　　_impl->init();\n　　}\n　　\n　　MyCPPClass::~MyCPPClass( void )\n　　{\n　　if ( _impl ) { delete _impl; _impl = NULL; }\n　　}\n　　\n　　void MyCPPClass::doSomethingWithMyClass( void )\n　　{\n　　int result = _impl->doSomethingWith(&_myValue);\n　　if ( result == cANSWER_TO_LIFE_THE_UNIVERSE_AND_EVERYTHING )\n　　{\n　　_impl->logMyMessage(\"Hello, Arthur!\");\n　　}\n　　else\n　　{\n　　_impl->logMyMessage(\"Don't worry.\");\n　　}\n　　}\n　　```\n　　\n　　**main.mm**\n　　\n　　```\n　　#include \"MyCPPClass.hpp\"\n\n　　int main(int argc, const char * argv[]) {\n　　@autoreleasepool {\n　　MyCPPClass *temp = new MyCPPClass();\n　　temp->init();\n　　temp->doSomethingWithMyClass();\n　　delete temp;\n　　}\n　　return 0;\n　　}\n　　```\n　　**运行结果**\n　　![by c++ IMPL](https://img2018.cnblogs.com/blog/552616/201906/552616-20190626153613056-820038660.png)\n　　\n　　# 总结\n　　第一种通过C语言的方式来调用，使用起来更复杂，所以建议使用C++的方式来实现。需要注意的问题是C++不能管理OC对象的释放，所以需要利用循环引用。\n　　\n　　你可以在这里下载[demo](https://github.com/WuKongCoo1/C-Invoke-OC/tree/master)\n　　\n　　参考：[https://stackoverflow.com/questions/1061005/calling-objective-c-method-from-c-member-function](https://stackoverflow.com/questions/1061005/calling-objective-c-method-from-c-member-function)\n","slug":"C-中调用OC代码","published":1,"updated":"2019-08-20T05:27:31.525Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzje0a6m0000vms6jlvxcvru","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>　　最近项目中为了方便维护，底层统一使用C++编写。由于是项目是做屏幕共享sdk，所以只能底层的压缩、编解码使用C++，屏幕捕获部分Mac和win就自己实现了。那么问题就来了，因为是面向接口编程，所以项目的入口都是c++来写的，而屏幕捕获是需要oc部分的代码，就需要C++调用oc代码了。</p>\n<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><p>　　之前只做过OC调动C++，于是Google了一下，在Stack Overflow上找到了这个<a href=\"https://stackoverflow.com/questions/1061005/calling-objective-c-method-from-c-member-function\" target=\"_blank\" rel=\"noopener\">回答</a>。要看具体描述的可以去链接看看，实现思路一共有两种，我在这里大概描述一下。第一种，由于C++是不能直接调用OC的，所以需要通过C语言作为中间层，即C++调用C，C调用OC，这样就达到了C++调用OC的目的。第二种OC是可以调用C++的，通过在外部声名C++类，然后类具体实现放在OC类中，这样C++类就能够调用OC类了，其他需要调用OC的类，只需要调用外部声名的类即可。</p>\n<h1 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h1><p>具体的实现方式有两种，第一种是C语言方法接收oc对象指针和参数，然后把指针桥接为具体的oc对象。第二种是用C++进行包装，先声名一个C++类，这里称为A。然后在OC类中，这里称为B，对A进行实现，因为这个实现实在OC语言里的，所以在这里是可以直接调用OC代码的。接下来声名一个C++类C。类C通过持有类A来调用OC类B，即A（C++）-&gt;C（C++）-&gt;B(OC类)</p>\n<p>　　## 实现方式一 by C</p>\n<p><strong>MyObject-C-Interface.h</strong><br>　　<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　int MyObjectDoSomethingWith (void *myObjectInstance, void *parameter);</span><br></pre></td></tr></table></figure></p>\n<p>　　<br><strong>MyObject.h</strong><br>　　<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　@interface MyObject : NSObject</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　int someVar;</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\"></span><br><span class=\"line\">　　- (int)doSomethingWith:(void *)aParameter;</span><br><span class=\"line\">　　@end</span><br></pre></td></tr></table></figure></p>\n<p>　　<strong>MyObject.mm</strong><br>　　<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　@implementation MyObject</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　int MyObjectDoSomethingWith (void *self, void *aParameter)</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　// 通过将self指针桥接为oc 对象来调用oc方法</span><br><span class=\"line\">　　return [(__bridge id)self doSomethingWith:aParameter];</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\"></span><br><span class=\"line\">　　- (int) doSomethingWith:(void *) aParameter</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　//将void *指针强转为对应的类型</span><br><span class=\"line\">　　int* param = (int *)aParameter;</span><br><span class=\"line\">　　return *param / 2 ;</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">　　- (void)dealloc</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　NSLog(@&quot;%s&quot;, __func__);</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">　　@end</span><br></pre></td></tr></table></figure></p>\n<p>　　<strong>MyCPPClass.h</strong><br>　　<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　class MyCPPClass &#123;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　public:</span><br><span class=\"line\">　　MyCPPClass();</span><br><span class=\"line\">　　~MyCPPClass();</span><br><span class=\"line\">　　int someMethod (void *objectiveCObject, void *aParameter);</span><br><span class=\"line\">　　void *self;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　void setSelf(void *self);</span><br><span class=\"line\">　　&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>　　<br>　　<strong>MyCPPClass.cpp</strong><br>　　<br>　　<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">　　#include &quot;MyObject-C-Interface.h&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">　　MyCPPClass::MyCPPClass()</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　MyCPPClass::~MyCPPClass()</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　int MyCPPClass::someMethod (void *objectiveCObject, void *aParameter)</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　// To invoke an Objective-C method from C++, use</span><br><span class=\"line\">　　// the C trampoline function</span><br><span class=\"line\">　　return MyObjectDoSomethingWith (objectiveCObject, aParameter);</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　void MyCPPClass::setSelf(void *aSelf)</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　self = aSelf;</span><br><span class=\"line\">　　&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　<strong>main.mm</strong><br>　　<br>　　<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">　　#include &quot;MyCPPClass.hpp&quot;</span><br><span class=\"line\">　　#import &quot;MyObject.h&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">　　int main(int argc, const char * argv[]) &#123;</span><br><span class=\"line\">　　@autoreleasepool &#123;</span><br><span class=\"line\">　　// insert code here...</span><br><span class=\"line\">　　NSLog(@&quot;Hello, World!&quot;);</span><br><span class=\"line\">　　MyObject *object = [[MyObject alloc] init];</span><br><span class=\"line\">　　MyCPPClass *c = new MyCPPClass();</span><br><span class=\"line\">　　c-&gt;setSelf((__bridge void *)object);</span><br><span class=\"line\">　　int a = 12;</span><br><span class=\"line\">　　int result = c-&gt;someMethod((__bridge void *)object, &amp;a);</span><br><span class=\"line\">　　NSLog(@&quot;%d&quot;, result);</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　return 0;</span><br><span class=\"line\">　　&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　运行结果如下：<br>　　<img src=\"https://img2018.cnblogs.com/blog/552616/201906/552616-20190626153439356-1906667270.png\" alt=\"运行结果\"><br>　　<br>　　<strong>存在的问题</strong><br>　　<br>　　<br>　　在每次C++调用时都需要传递OC对象桥接为==void <em>==的指针，使用起来很不方便。<br>　　<br>　　## 方式二 by C++ IMPL<br>　　*</em>MyObject-C-Interface.h**<br>　　<br>　　<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　#ifndef MyObject_C_Interface_h__h</span><br><span class=\"line\">　　#define MyObject_C_Interface_h__h</span><br><span class=\"line\"></span><br><span class=\"line\">　　class MyClassImpl</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　public:</span><br><span class=\"line\">　　MyClassImpl ( void );</span><br><span class=\"line\">　　~MyClassImpl( void );</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　void init( void );</span><br><span class=\"line\">　　int  doSomethingWith( void * aParameter );</span><br><span class=\"line\">　　void logMyMessage( char * aCStr );</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　private:</span><br><span class=\"line\">　　void * self;</span><br><span class=\"line\">　　&#125;;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　#endif /* MyObject_C_Interface_h__h */</span><br></pre></td></tr></table></figure></p>\n<p>　　需要注意的是，==MyClassImpl==的实现是放在OC中的<br>　　<strong>MyObject.h</strong><br>　　<br>　　<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　NS_ASSUME_NONNULL_BEGIN</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　@interface MyObject : NSObject</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　int someVar;</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　- (int)  doSomethingWith:(void *) aParameter;</span><br><span class=\"line\">　　- (void) logMyMessage:(char *) aCStr;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">　　@end</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　NS_ASSUME_NONNULL_END</span><br></pre></td></tr></table></figure></p>\n<p>　　<br>　　<strong>MyObject.mm</strong><br>　　<br>　　<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　#include &quot;MyObject-C-Interface.h&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">　　typedef void(^RetainSelfBlock)(void);</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　@implementation MyObject</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　RetainSelfBlock _retainBlock;//通过这个block持有对象，造成循环引用，避免被释放</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　MyClassImpl::MyClassImpl( void )</span><br><span class=\"line\">　　: self( NULL )</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　MyClassImpl::~MyClassImpl( void )</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　[(__bridge id) self breakRetainCycly];</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　void MyClassImpl::init( void )</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　MyObject *object = [[MyObject alloc] init];</span><br><span class=\"line\">　　object-&gt;_retainBlock = ^&#123;//循环引用</span><br><span class=\"line\">　　[object class];</span><br><span class=\"line\">　　&#125;;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　self = (__bridge void *)object;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　NSLog(@&quot;%p&quot;, self);</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　int MyClassImpl::doSomethingWith( void *aParameter )</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　NSLog(@&quot;%p&quot;, self);</span><br><span class=\"line\">　　return [(__bridge id)self doSomethingWith:aParameter];</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　void MyClassImpl::logMyMessage( char *aCStr )</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　[(__bridge id)self logMyMessage:aCStr];</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　- (int) doSomethingWith:(void *) aParameter</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　int result = 0;</span><br><span class=\"line\"></span><br><span class=\"line\">　　// ... some code to calculate the result</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　return result;</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　- (void) logMyMessage:(char *) aCStr</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　NSLog( @&quot;%s&quot;, aCStr );</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">　　//打破循环引用，释放对象</span><br><span class=\"line\">　　- (void) breakRetainCycly</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　_retainBlock = nil;</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">　　- (void)dealloc</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　NSLog(@&quot;%s&quot;, __func__);</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　@end</span><br></pre></td></tr></table></figure></p>\n<p>　　在==MyObject.mm==中需要注意的是，由于OC是使用ARC来进行内存管理的，C++不能够管理OC对象的生命周期。在默认的情况下，临时变量会在autorelease pool每一次pop后被释放，所以在oc实现中要想对象不被释放，那就需要循环引用来帮忙了。</p>\n<p>　　具体代码如下,在MyClassImpl初始化时，利用循环引用保证object不被释放，在MyClassImpl调用析构函数时，将block置空，打破循环引用，以此来释放oc对象<br>　　<br>　　<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　void MyClassImpl::init( void )</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　MyObject *object = [[MyObject alloc] init];</span><br><span class=\"line\">　　object-&gt;_retainBlock = ^&#123;//循环引用</span><br><span class=\"line\">　　[object class];</span><br><span class=\"line\">　　&#125;;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　self = (__bridge void *)object;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　NSLog(@&quot;%p&quot;, self);</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　MyClassImpl::~MyClassImpl( void )</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　[(__bridge id) self breakRetainCycly];</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　//打破循环引用，释放对象</span><br><span class=\"line\">　　- (void) breakRetainCycly</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　_retainBlock = nil;</span><br><span class=\"line\">　　&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　<br>　　<strong>MyCPPClass.hpp</strong><br>　　<br>　　<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　#ifndef MyCPPClass_hpp</span><br><span class=\"line\">　　#define MyCPPClass_hpp</span><br><span class=\"line\"></span><br><span class=\"line\">　　#include &lt;stdio.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">　　class MyClassImpl;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　class MyCPPClass</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　enum &#123; cANSWER_TO_LIFE_THE_UNIVERSE_AND_EVERYTHING = 42 &#125;;</span><br><span class=\"line\">　　public:</span><br><span class=\"line\">　　MyCPPClass ( void );</span><br><span class=\"line\">　　~MyCPPClass( void );</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　void init( void );</span><br><span class=\"line\">　　void doSomethingWithMyClass( void );</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　private:</span><br><span class=\"line\">　　MyClassImpl * _impl;</span><br><span class=\"line\">　　int           _myValue;</span><br><span class=\"line\">　　&#125;;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　#endif /* MyCPPClass_hpp */</span><br></pre></td></tr></table></figure></p>\n<p>　　<br>　　<strong>MyCPPClass.cpp</strong><br>　　<br>　　<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　#include &quot;MyCPPClass.hpp&quot;</span><br><span class=\"line\">　　#include &quot;MyObject-C-Interface.h&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">　　MyCPPClass::MyCPPClass( void )</span><br><span class=\"line\">　　: _impl ( NULL )</span><br><span class=\"line\">　　&#123;   &#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　void MyCPPClass::init( void )</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　_impl = new MyClassImpl();</span><br><span class=\"line\">　　_impl-&gt;init();</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　MyCPPClass::~MyCPPClass( void )</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　if ( _impl ) &#123; delete _impl; _impl = NULL; &#125;</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　void MyCPPClass::doSomethingWithMyClass( void )</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　int result = _impl-&gt;doSomethingWith(&amp;_myValue);</span><br><span class=\"line\">　　if ( result == cANSWER_TO_LIFE_THE_UNIVERSE_AND_EVERYTHING )</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　_impl-&gt;logMyMessage(&quot;Hello, Arthur!&quot;);</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　else</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　_impl-&gt;logMyMessage(&quot;Don&apos;t worry.&quot;);</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　<br>　　<strong>main.mm</strong><br>　　<br>　　<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　#include &quot;MyCPPClass.hpp&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">　　int main(int argc, const char * argv[]) &#123;</span><br><span class=\"line\">　　@autoreleasepool &#123;</span><br><span class=\"line\">　　MyCPPClass *temp = new MyCPPClass();</span><br><span class=\"line\">　　temp-&gt;init();</span><br><span class=\"line\">　　temp-&gt;doSomethingWithMyClass();</span><br><span class=\"line\">　　delete temp;</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　return 0;</span><br><span class=\"line\">　　&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　<strong>运行结果</strong><br>　　<img src=\"https://img2018.cnblogs.com/blog/552616/201906/552616-20190626153613056-820038660.png\" alt=\"by c++ IMPL\"><br>　　<br>　　# 总结<br>　　第一种通过C语言的方式来调用，使用起来更复杂，所以建议使用C++的方式来实现。需要注意的问题是C++不能管理OC对象的释放，所以需要利用循环引用。<br>　　<br>　　你可以在这里下载<a href=\"https://github.com/WuKongCoo1/C-Invoke-OC/tree/master\" target=\"_blank\" rel=\"noopener\">demo</a><br>　　<br>　　参考：<a href=\"https://stackoverflow.com/questions/1061005/calling-objective-c-method-from-c-member-function\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/questions/1061005/calling-objective-c-method-from-c-member-function</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>　　最近项目中为了方便维护，底层统一使用C++编写。由于是项目是做屏幕共享sdk，所以只能底层的压缩、编解码使用C++，屏幕捕获部分Mac和win就自己实现了。那么问题就来了，因为是面向接口编程，所以项目的入口都是c++来写的，而屏幕捕获是需要oc部分的代码，就需要C++调用oc代码了。</p>\n<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><p>　　之前只做过OC调动C++，于是Google了一下，在Stack Overflow上找到了这个<a href=\"https://stackoverflow.com/questions/1061005/calling-objective-c-method-from-c-member-function\" target=\"_blank\" rel=\"noopener\">回答</a>。要看具体描述的可以去链接看看，实现思路一共有两种，我在这里大概描述一下。第一种，由于C++是不能直接调用OC的，所以需要通过C语言作为中间层，即C++调用C，C调用OC，这样就达到了C++调用OC的目的。第二种OC是可以调用C++的，通过在外部声名C++类，然后类具体实现放在OC类中，这样C++类就能够调用OC类了，其他需要调用OC的类，只需要调用外部声名的类即可。</p>\n<h1 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h1><p>具体的实现方式有两种，第一种是C语言方法接收oc对象指针和参数，然后把指针桥接为具体的oc对象。第二种是用C++进行包装，先声名一个C++类，这里称为A。然后在OC类中，这里称为B，对A进行实现，因为这个实现实在OC语言里的，所以在这里是可以直接调用OC代码的。接下来声名一个C++类C。类C通过持有类A来调用OC类B，即A（C++）-&gt;C（C++）-&gt;B(OC类)</p>\n<p>　　## 实现方式一 by C</p>\n<p><strong>MyObject-C-Interface.h</strong><br>　　<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　int MyObjectDoSomethingWith (void *myObjectInstance, void *parameter);</span><br></pre></td></tr></table></figure></p>\n<p>　　<br><strong>MyObject.h</strong><br>　　<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　@interface MyObject : NSObject</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　int someVar;</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\"></span><br><span class=\"line\">　　- (int)doSomethingWith:(void *)aParameter;</span><br><span class=\"line\">　　@end</span><br></pre></td></tr></table></figure></p>\n<p>　　<strong>MyObject.mm</strong><br>　　<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　@implementation MyObject</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　int MyObjectDoSomethingWith (void *self, void *aParameter)</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　// 通过将self指针桥接为oc 对象来调用oc方法</span><br><span class=\"line\">　　return [(__bridge id)self doSomethingWith:aParameter];</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\"></span><br><span class=\"line\">　　- (int) doSomethingWith:(void *) aParameter</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　//将void *指针强转为对应的类型</span><br><span class=\"line\">　　int* param = (int *)aParameter;</span><br><span class=\"line\">　　return *param / 2 ;</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">　　- (void)dealloc</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　NSLog(@&quot;%s&quot;, __func__);</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">　　@end</span><br></pre></td></tr></table></figure></p>\n<p>　　<strong>MyCPPClass.h</strong><br>　　<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　class MyCPPClass &#123;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　public:</span><br><span class=\"line\">　　MyCPPClass();</span><br><span class=\"line\">　　~MyCPPClass();</span><br><span class=\"line\">　　int someMethod (void *objectiveCObject, void *aParameter);</span><br><span class=\"line\">　　void *self;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　void setSelf(void *self);</span><br><span class=\"line\">　　&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>　　<br>　　<strong>MyCPPClass.cpp</strong><br>　　<br>　　<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">　　#include &quot;MyObject-C-Interface.h&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">　　MyCPPClass::MyCPPClass()</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　MyCPPClass::~MyCPPClass()</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　int MyCPPClass::someMethod (void *objectiveCObject, void *aParameter)</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　// To invoke an Objective-C method from C++, use</span><br><span class=\"line\">　　// the C trampoline function</span><br><span class=\"line\">　　return MyObjectDoSomethingWith (objectiveCObject, aParameter);</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　void MyCPPClass::setSelf(void *aSelf)</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　self = aSelf;</span><br><span class=\"line\">　　&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　<strong>main.mm</strong><br>　　<br>　　<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">　　#include &quot;MyCPPClass.hpp&quot;</span><br><span class=\"line\">　　#import &quot;MyObject.h&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">　　int main(int argc, const char * argv[]) &#123;</span><br><span class=\"line\">　　@autoreleasepool &#123;</span><br><span class=\"line\">　　// insert code here...</span><br><span class=\"line\">　　NSLog(@&quot;Hello, World!&quot;);</span><br><span class=\"line\">　　MyObject *object = [[MyObject alloc] init];</span><br><span class=\"line\">　　MyCPPClass *c = new MyCPPClass();</span><br><span class=\"line\">　　c-&gt;setSelf((__bridge void *)object);</span><br><span class=\"line\">　　int a = 12;</span><br><span class=\"line\">　　int result = c-&gt;someMethod((__bridge void *)object, &amp;a);</span><br><span class=\"line\">　　NSLog(@&quot;%d&quot;, result);</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　return 0;</span><br><span class=\"line\">　　&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　运行结果如下：<br>　　<img src=\"https://img2018.cnblogs.com/blog/552616/201906/552616-20190626153439356-1906667270.png\" alt=\"运行结果\"><br>　　<br>　　<strong>存在的问题</strong><br>　　<br>　　<br>　　在每次C++调用时都需要传递OC对象桥接为==void <em>==的指针，使用起来很不方便。<br>　　<br>　　## 方式二 by C++ IMPL<br>　　*</em>MyObject-C-Interface.h**<br>　　<br>　　<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　#ifndef MyObject_C_Interface_h__h</span><br><span class=\"line\">　　#define MyObject_C_Interface_h__h</span><br><span class=\"line\"></span><br><span class=\"line\">　　class MyClassImpl</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　public:</span><br><span class=\"line\">　　MyClassImpl ( void );</span><br><span class=\"line\">　　~MyClassImpl( void );</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　void init( void );</span><br><span class=\"line\">　　int  doSomethingWith( void * aParameter );</span><br><span class=\"line\">　　void logMyMessage( char * aCStr );</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　private:</span><br><span class=\"line\">　　void * self;</span><br><span class=\"line\">　　&#125;;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　#endif /* MyObject_C_Interface_h__h */</span><br></pre></td></tr></table></figure></p>\n<p>　　需要注意的是，==MyClassImpl==的实现是放在OC中的<br>　　<strong>MyObject.h</strong><br>　　<br>　　<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　NS_ASSUME_NONNULL_BEGIN</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　@interface MyObject : NSObject</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　int someVar;</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　- (int)  doSomethingWith:(void *) aParameter;</span><br><span class=\"line\">　　- (void) logMyMessage:(char *) aCStr;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">　　@end</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　NS_ASSUME_NONNULL_END</span><br></pre></td></tr></table></figure></p>\n<p>　　<br>　　<strong>MyObject.mm</strong><br>　　<br>　　<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　#include &quot;MyObject-C-Interface.h&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">　　typedef void(^RetainSelfBlock)(void);</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　@implementation MyObject</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　RetainSelfBlock _retainBlock;//通过这个block持有对象，造成循环引用，避免被释放</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　MyClassImpl::MyClassImpl( void )</span><br><span class=\"line\">　　: self( NULL )</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　MyClassImpl::~MyClassImpl( void )</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　[(__bridge id) self breakRetainCycly];</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　void MyClassImpl::init( void )</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　MyObject *object = [[MyObject alloc] init];</span><br><span class=\"line\">　　object-&gt;_retainBlock = ^&#123;//循环引用</span><br><span class=\"line\">　　[object class];</span><br><span class=\"line\">　　&#125;;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　self = (__bridge void *)object;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　NSLog(@&quot;%p&quot;, self);</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　int MyClassImpl::doSomethingWith( void *aParameter )</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　NSLog(@&quot;%p&quot;, self);</span><br><span class=\"line\">　　return [(__bridge id)self doSomethingWith:aParameter];</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　void MyClassImpl::logMyMessage( char *aCStr )</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　[(__bridge id)self logMyMessage:aCStr];</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　- (int) doSomethingWith:(void *) aParameter</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　int result = 0;</span><br><span class=\"line\"></span><br><span class=\"line\">　　// ... some code to calculate the result</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　return result;</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　- (void) logMyMessage:(char *) aCStr</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　NSLog( @&quot;%s&quot;, aCStr );</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">　　//打破循环引用，释放对象</span><br><span class=\"line\">　　- (void) breakRetainCycly</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　_retainBlock = nil;</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">　　- (void)dealloc</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　NSLog(@&quot;%s&quot;, __func__);</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　@end</span><br></pre></td></tr></table></figure></p>\n<p>　　在==MyObject.mm==中需要注意的是，由于OC是使用ARC来进行内存管理的，C++不能够管理OC对象的生命周期。在默认的情况下，临时变量会在autorelease pool每一次pop后被释放，所以在oc实现中要想对象不被释放，那就需要循环引用来帮忙了。</p>\n<p>　　具体代码如下,在MyClassImpl初始化时，利用循环引用保证object不被释放，在MyClassImpl调用析构函数时，将block置空，打破循环引用，以此来释放oc对象<br>　　<br>　　<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　void MyClassImpl::init( void )</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　MyObject *object = [[MyObject alloc] init];</span><br><span class=\"line\">　　object-&gt;_retainBlock = ^&#123;//循环引用</span><br><span class=\"line\">　　[object class];</span><br><span class=\"line\">　　&#125;;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　self = (__bridge void *)object;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　NSLog(@&quot;%p&quot;, self);</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　MyClassImpl::~MyClassImpl( void )</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　[(__bridge id) self breakRetainCycly];</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　//打破循环引用，释放对象</span><br><span class=\"line\">　　- (void) breakRetainCycly</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　_retainBlock = nil;</span><br><span class=\"line\">　　&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　<br>　　<strong>MyCPPClass.hpp</strong><br>　　<br>　　<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　#ifndef MyCPPClass_hpp</span><br><span class=\"line\">　　#define MyCPPClass_hpp</span><br><span class=\"line\"></span><br><span class=\"line\">　　#include &lt;stdio.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">　　class MyClassImpl;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　class MyCPPClass</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　enum &#123; cANSWER_TO_LIFE_THE_UNIVERSE_AND_EVERYTHING = 42 &#125;;</span><br><span class=\"line\">　　public:</span><br><span class=\"line\">　　MyCPPClass ( void );</span><br><span class=\"line\">　　~MyCPPClass( void );</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　void init( void );</span><br><span class=\"line\">　　void doSomethingWithMyClass( void );</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　private:</span><br><span class=\"line\">　　MyClassImpl * _impl;</span><br><span class=\"line\">　　int           _myValue;</span><br><span class=\"line\">　　&#125;;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　#endif /* MyCPPClass_hpp */</span><br></pre></td></tr></table></figure></p>\n<p>　　<br>　　<strong>MyCPPClass.cpp</strong><br>　　<br>　　<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　#include &quot;MyCPPClass.hpp&quot;</span><br><span class=\"line\">　　#include &quot;MyObject-C-Interface.h&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">　　MyCPPClass::MyCPPClass( void )</span><br><span class=\"line\">　　: _impl ( NULL )</span><br><span class=\"line\">　　&#123;   &#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　void MyCPPClass::init( void )</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　_impl = new MyClassImpl();</span><br><span class=\"line\">　　_impl-&gt;init();</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　MyCPPClass::~MyCPPClass( void )</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　if ( _impl ) &#123; delete _impl; _impl = NULL; &#125;</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　</span><br><span class=\"line\">　　void MyCPPClass::doSomethingWithMyClass( void )</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　int result = _impl-&gt;doSomethingWith(&amp;_myValue);</span><br><span class=\"line\">　　if ( result == cANSWER_TO_LIFE_THE_UNIVERSE_AND_EVERYTHING )</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　_impl-&gt;logMyMessage(&quot;Hello, Arthur!&quot;);</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　else</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">　　_impl-&gt;logMyMessage(&quot;Don&apos;t worry.&quot;);</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　<br>　　<strong>main.mm</strong><br>　　<br>　　<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　#include &quot;MyCPPClass.hpp&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">　　int main(int argc, const char * argv[]) &#123;</span><br><span class=\"line\">　　@autoreleasepool &#123;</span><br><span class=\"line\">　　MyCPPClass *temp = new MyCPPClass();</span><br><span class=\"line\">　　temp-&gt;init();</span><br><span class=\"line\">　　temp-&gt;doSomethingWithMyClass();</span><br><span class=\"line\">　　delete temp;</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　return 0;</span><br><span class=\"line\">　　&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　<strong>运行结果</strong><br>　　<img src=\"https://img2018.cnblogs.com/blog/552616/201906/552616-20190626153613056-820038660.png\" alt=\"by c++ IMPL\"><br>　　<br>　　# 总结<br>　　第一种通过C语言的方式来调用，使用起来更复杂，所以建议使用C++的方式来实现。需要注意的问题是C++不能管理OC对象的释放，所以需要利用循环引用。<br>　　<br>　　你可以在这里下载<a href=\"https://github.com/WuKongCoo1/C-Invoke-OC/tree/master\" target=\"_blank\" rel=\"noopener\">demo</a><br>　　<br>　　参考：<a href=\"https://stackoverflow.com/questions/1061005/calling-objective-c-method-from-c-member-function\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/questions/1061005/calling-objective-c-method-from-c-member-function</a></p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2019-08-16T08:24:33.729Z","updated":"2019-08-16T08:24:33.729Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzje0a6q0001vms66vtq0mut","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"Mac OpenGL环境搭建","date":"2019-08-20T13:10:26.000Z","_content":"\n# MAC OpenGL 环境搭建\n\n## 基础库介绍\n\n先要安装两个库一个是GLEW（OpenGL Extension Wrangler Library），另外一个是GLFW（Graphics Library Framework）\n\n### GLEW \n\n譯自英文-OpenGL擴展Wrangler庫是一個跨平台的C / C ++庫，可幫助查詢和加載OpenGL擴展。 GLEW提供了高效的運行時機制，用於確定目標平台上支持哪些OpenGL擴展。所有OpenGL擴展都在一個頭文件中公開，該文件是從官方擴展名列表機器生成的\n\n### GLFW\n\nGLFW 是配合 OpenGL 使用的轻量级工具程序库，缩写自 Graphics Library Framework（图形库框架）。GLFW 的主要功能是创建并管理窗口和 OpenGL 上下文，同时还提供了处理手柄、键盘、鼠标输入的功能。\n\n## 进入安装步骤\n\n### 准备工作\n\n要进行安装的话需要先安装CMake，可以选择使用GUI 方式 或者命令行的方式。GUI可以在这里[下载](https://cmake.org/download/)，命令行的方式的话，可以用brew来安装，方式如下\n\n```shell\nbrew install cmake\n```\n\n### 安装GLEW\n\n首先在这里下载[源码](http://glew.sourceforge.net/)，下载以后，解压文件，然后进入到文件所在路径，打开终端进入到此路径，执行命令\n\n```shell\nsudo make install\n```\n\n### 安装GLFW\n\n首先在[这里](https://www.glfw.org/download.html)下载源码，我们可以选择直接下载编译好的库，也可以下载源文件然后通过camke来自己编译，区别是如果用cmake库的话，在执行成功以后，会直接将生成的库与头文件分别添加到系统路径，也就是/usr/local/include和/usr/local/lib。这里就自己选择方式了。我在这里介绍利用make工具，自己编译的方式\n\n打开cmake 的gui工具，在source code选择下载的glfw路径，这一步需要在这个路径创建一个build目录，用于存放生成的文件。然后在browse build路径选择我们刚才创建的路径，点击configure。\n![](https://img2018.cnblogs.com/blog/552616/201908/552616-20190815143441915-1128090430.png)\n\n生成成功会出现如下效果\n\n![](https://img2018.cnblogs.com/blog/552616/201908/552616-20190815143348522-1218740224.png)\n\n\n接下来从终端进入到build目录，没错就是刚才我们创建的build，输入如下指令\n\n```shell\nsudo make\nsudo make install\n```\n\n执行成功后，剩成的.a文件与头文件就都放到/usr/local/include和/usr/local/lib了。\n\n环境安装好以后，应该是这个样子的\n\n![](https://img2018.cnblogs.com/blog/552616/201908/552616-20190815143328995-1467734221.png)\n\n\n\n至此，环境安装完毕，接下来就是加入到工程了\n\n## 加入工程\n\n### 配置搜索路径\n\n首先我们创建一个command line的工程，然后在build setting里这只user search path，在user search path中设置为：/usr/local/include，这里一定要注意不能选择递归查找，否则会出错。然后设置library search path为：/usr/local/lib。设置这个的作用是工程中明确工程中查找头文件和.a文件的路径。\n\n### 添加要链接的framework\n\n添加以下库文件：\n\n- Cocoa.framework\n- OpenGL.framwork\n- GLUT.framework\n- CoreVideo.framework\n- IOKit.framework\n- libglfw3.a\n- libGLEW.a\n\n![库文件](https://img2018.cnblogs.com/blog/552616/201908/552616-20190815143224335-1252417188.png)\n\n其中，libglfw3.a、libGLEW.a需要点击 add another，然后进入要路径/usr/local/lib中添加。\n\n配置完成以后，就可以写代码了，进入main.cpp文件，将main中修改如下\n\n```c++\n#include <iostream>\n#include <GL/glew.h>\n#include <GLFW/glfw3.h>\nvoid Render(void)\n{\n    glClearColor(0.0f, 0.0f, 0.0f, 1.0f);\n    glClear(GL_COLOR_BUFFER_BIT);\n    glBegin(GL_TRIANGLES);\n    {\n        glColor3f(1.0,0.0,0.0);\n        glVertex2f(0, .5);\n        glColor3f(0.0,1.0,0.0);\n        glVertex2f(-.5,-.5);\n        glColor3f(0.0, 0.0, 1.0);\n        glVertex2f(.5, -.5);\n    }\n    glEnd();\n}\nint main(void) {\n    GLFWwindow* win;\n    if(!glfwInit()){\n        return -1;\n    }\n    win = glfwCreateWindow(640, 480, \"OpenGL Base Project\", NULL, NULL);\n    if(!win)\n    {\n        glfwTerminate();\n        exit(EXIT_FAILURE);\n    }\n    if(!glewInit())\n    {\n        return -1;\n    }\n    glfwMakeContextCurrent(win);\n    while(!glfwWindowShouldClose(win)){\n        Render();\n        glfwSwapBuffers(win);\n        glfwPollEvents();\n    }\n    glfwTerminate();\n    exit(EXIT_SUCCESS);\n    return 0;\n}\n```\n\n见证奇迹的时刻到了，运行，你将会看到一个漂亮的三角形![](https://img2018.cnblogs.com/blog/552616/201908/552616-20190815143156518-737968913.png)\n\nmac 工程搭建，就说这么多了。\n\n------\n\n感谢以下文章的作者：\n\n[Mac系统下配置OpenGL环境（小白自学版）](https://zhuanlan.zhihu.com/p/24529016)\n\n[OpenGL学习笔记（二）—— (macOS)环境搭建](http://blog.shenyuanluo.com/OpenGLEnvironment.html)","source":"_posts/Mac-OpenGL环境搭建.md","raw":"---\ntitle: Mac OpenGL环境搭建\ndate: 2019-08-20 13:10:26\ntags:\ncategories:\n- [OpenGL]\n---\n\n# MAC OpenGL 环境搭建\n\n## 基础库介绍\n\n先要安装两个库一个是GLEW（OpenGL Extension Wrangler Library），另外一个是GLFW（Graphics Library Framework）\n\n### GLEW \n\n譯自英文-OpenGL擴展Wrangler庫是一個跨平台的C / C ++庫，可幫助查詢和加載OpenGL擴展。 GLEW提供了高效的運行時機制，用於確定目標平台上支持哪些OpenGL擴展。所有OpenGL擴展都在一個頭文件中公開，該文件是從官方擴展名列表機器生成的\n\n### GLFW\n\nGLFW 是配合 OpenGL 使用的轻量级工具程序库，缩写自 Graphics Library Framework（图形库框架）。GLFW 的主要功能是创建并管理窗口和 OpenGL 上下文，同时还提供了处理手柄、键盘、鼠标输入的功能。\n\n## 进入安装步骤\n\n### 准备工作\n\n要进行安装的话需要先安装CMake，可以选择使用GUI 方式 或者命令行的方式。GUI可以在这里[下载](https://cmake.org/download/)，命令行的方式的话，可以用brew来安装，方式如下\n\n```shell\nbrew install cmake\n```\n\n### 安装GLEW\n\n首先在这里下载[源码](http://glew.sourceforge.net/)，下载以后，解压文件，然后进入到文件所在路径，打开终端进入到此路径，执行命令\n\n```shell\nsudo make install\n```\n\n### 安装GLFW\n\n首先在[这里](https://www.glfw.org/download.html)下载源码，我们可以选择直接下载编译好的库，也可以下载源文件然后通过camke来自己编译，区别是如果用cmake库的话，在执行成功以后，会直接将生成的库与头文件分别添加到系统路径，也就是/usr/local/include和/usr/local/lib。这里就自己选择方式了。我在这里介绍利用make工具，自己编译的方式\n\n打开cmake 的gui工具，在source code选择下载的glfw路径，这一步需要在这个路径创建一个build目录，用于存放生成的文件。然后在browse build路径选择我们刚才创建的路径，点击configure。\n![](https://img2018.cnblogs.com/blog/552616/201908/552616-20190815143441915-1128090430.png)\n\n生成成功会出现如下效果\n\n![](https://img2018.cnblogs.com/blog/552616/201908/552616-20190815143348522-1218740224.png)\n\n\n接下来从终端进入到build目录，没错就是刚才我们创建的build，输入如下指令\n\n```shell\nsudo make\nsudo make install\n```\n\n执行成功后，剩成的.a文件与头文件就都放到/usr/local/include和/usr/local/lib了。\n\n环境安装好以后，应该是这个样子的\n\n![](https://img2018.cnblogs.com/blog/552616/201908/552616-20190815143328995-1467734221.png)\n\n\n\n至此，环境安装完毕，接下来就是加入到工程了\n\n## 加入工程\n\n### 配置搜索路径\n\n首先我们创建一个command line的工程，然后在build setting里这只user search path，在user search path中设置为：/usr/local/include，这里一定要注意不能选择递归查找，否则会出错。然后设置library search path为：/usr/local/lib。设置这个的作用是工程中明确工程中查找头文件和.a文件的路径。\n\n### 添加要链接的framework\n\n添加以下库文件：\n\n- Cocoa.framework\n- OpenGL.framwork\n- GLUT.framework\n- CoreVideo.framework\n- IOKit.framework\n- libglfw3.a\n- libGLEW.a\n\n![库文件](https://img2018.cnblogs.com/blog/552616/201908/552616-20190815143224335-1252417188.png)\n\n其中，libglfw3.a、libGLEW.a需要点击 add another，然后进入要路径/usr/local/lib中添加。\n\n配置完成以后，就可以写代码了，进入main.cpp文件，将main中修改如下\n\n```c++\n#include <iostream>\n#include <GL/glew.h>\n#include <GLFW/glfw3.h>\nvoid Render(void)\n{\n    glClearColor(0.0f, 0.0f, 0.0f, 1.0f);\n    glClear(GL_COLOR_BUFFER_BIT);\n    glBegin(GL_TRIANGLES);\n    {\n        glColor3f(1.0,0.0,0.0);\n        glVertex2f(0, .5);\n        glColor3f(0.0,1.0,0.0);\n        glVertex2f(-.5,-.5);\n        glColor3f(0.0, 0.0, 1.0);\n        glVertex2f(.5, -.5);\n    }\n    glEnd();\n}\nint main(void) {\n    GLFWwindow* win;\n    if(!glfwInit()){\n        return -1;\n    }\n    win = glfwCreateWindow(640, 480, \"OpenGL Base Project\", NULL, NULL);\n    if(!win)\n    {\n        glfwTerminate();\n        exit(EXIT_FAILURE);\n    }\n    if(!glewInit())\n    {\n        return -1;\n    }\n    glfwMakeContextCurrent(win);\n    while(!glfwWindowShouldClose(win)){\n        Render();\n        glfwSwapBuffers(win);\n        glfwPollEvents();\n    }\n    glfwTerminate();\n    exit(EXIT_SUCCESS);\n    return 0;\n}\n```\n\n见证奇迹的时刻到了，运行，你将会看到一个漂亮的三角形![](https://img2018.cnblogs.com/blog/552616/201908/552616-20190815143156518-737968913.png)\n\nmac 工程搭建，就说这么多了。\n\n------\n\n感谢以下文章的作者：\n\n[Mac系统下配置OpenGL环境（小白自学版）](https://zhuanlan.zhihu.com/p/24529016)\n\n[OpenGL学习笔记（二）—— (macOS)环境搭建](http://blog.shenyuanluo.com/OpenGLEnvironment.html)","slug":"Mac-OpenGL环境搭建","published":1,"updated":"2019-08-20T05:13:15.677Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzje0a6t0002vms6q8n2xjtf","content":"<h1 id=\"MAC-OpenGL-环境搭建\"><a href=\"#MAC-OpenGL-环境搭建\" class=\"headerlink\" title=\"MAC OpenGL 环境搭建\"></a>MAC OpenGL 环境搭建</h1><h2 id=\"基础库介绍\"><a href=\"#基础库介绍\" class=\"headerlink\" title=\"基础库介绍\"></a>基础库介绍</h2><p>先要安装两个库一个是GLEW（OpenGL Extension Wrangler Library），另外一个是GLFW（Graphics Library Framework）</p>\n<h3 id=\"GLEW\"><a href=\"#GLEW\" class=\"headerlink\" title=\"GLEW\"></a>GLEW</h3><p>譯自英文-OpenGL擴展Wrangler庫是一個跨平台的C / C ++庫，可幫助查詢和加載OpenGL擴展。 GLEW提供了高效的運行時機制，用於確定目標平台上支持哪些OpenGL擴展。所有OpenGL擴展都在一個頭文件中公開，該文件是從官方擴展名列表機器生成的</p>\n<h3 id=\"GLFW\"><a href=\"#GLFW\" class=\"headerlink\" title=\"GLFW\"></a>GLFW</h3><p>GLFW 是配合 OpenGL 使用的轻量级工具程序库，缩写自 Graphics Library Framework（图形库框架）。GLFW 的主要功能是创建并管理窗口和 OpenGL 上下文，同时还提供了处理手柄、键盘、鼠标输入的功能。</p>\n<h2 id=\"进入安装步骤\"><a href=\"#进入安装步骤\" class=\"headerlink\" title=\"进入安装步骤\"></a>进入安装步骤</h2><h3 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h3><p>要进行安装的话需要先安装CMake，可以选择使用GUI 方式 或者命令行的方式。GUI可以在这里<a href=\"https://cmake.org/download/\" target=\"_blank\" rel=\"noopener\">下载</a>，命令行的方式的话，可以用brew来安装，方式如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install cmake</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装GLEW\"><a href=\"#安装GLEW\" class=\"headerlink\" title=\"安装GLEW\"></a>安装GLEW</h3><p>首先在这里下载<a href=\"http://glew.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">源码</a>，下载以后，解压文件，然后进入到文件所在路径，打开终端进入到此路径，执行命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装GLFW\"><a href=\"#安装GLFW\" class=\"headerlink\" title=\"安装GLFW\"></a>安装GLFW</h3><p>首先在<a href=\"https://www.glfw.org/download.html\" target=\"_blank\" rel=\"noopener\">这里</a>下载源码，我们可以选择直接下载编译好的库，也可以下载源文件然后通过camke来自己编译，区别是如果用cmake库的话，在执行成功以后，会直接将生成的库与头文件分别添加到系统路径，也就是/usr/local/include和/usr/local/lib。这里就自己选择方式了。我在这里介绍利用make工具，自己编译的方式</p>\n<p>打开cmake 的gui工具，在source code选择下载的glfw路径，这一步需要在这个路径创建一个build目录，用于存放生成的文件。然后在browse build路径选择我们刚才创建的路径，点击configure。<br><img src=\"https://img2018.cnblogs.com/blog/552616/201908/552616-20190815143441915-1128090430.png\" alt></p>\n<p>生成成功会出现如下效果</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/552616/201908/552616-20190815143348522-1218740224.png\" alt></p>\n<p>接下来从终端进入到build目录，没错就是刚才我们创建的build，输入如下指令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo make</span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n\n<p>执行成功后，剩成的.a文件与头文件就都放到/usr/local/include和/usr/local/lib了。</p>\n<p>环境安装好以后，应该是这个样子的</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/552616/201908/552616-20190815143328995-1467734221.png\" alt></p>\n<p>至此，环境安装完毕，接下来就是加入到工程了</p>\n<h2 id=\"加入工程\"><a href=\"#加入工程\" class=\"headerlink\" title=\"加入工程\"></a>加入工程</h2><h3 id=\"配置搜索路径\"><a href=\"#配置搜索路径\" class=\"headerlink\" title=\"配置搜索路径\"></a>配置搜索路径</h3><p>首先我们创建一个command line的工程，然后在build setting里这只user search path，在user search path中设置为：/usr/local/include，这里一定要注意不能选择递归查找，否则会出错。然后设置library search path为：/usr/local/lib。设置这个的作用是工程中明确工程中查找头文件和.a文件的路径。</p>\n<h3 id=\"添加要链接的framework\"><a href=\"#添加要链接的framework\" class=\"headerlink\" title=\"添加要链接的framework\"></a>添加要链接的framework</h3><p>添加以下库文件：</p>\n<ul>\n<li>Cocoa.framework</li>\n<li>OpenGL.framwork</li>\n<li>GLUT.framework</li>\n<li>CoreVideo.framework</li>\n<li>IOKit.framework</li>\n<li>libglfw3.a</li>\n<li>libGLEW.a</li>\n</ul>\n<p><img src=\"https://img2018.cnblogs.com/blog/552616/201908/552616-20190815143224335-1252417188.png\" alt=\"库文件\"></p>\n<p>其中，libglfw3.a、libGLEW.a需要点击 add another，然后进入要路径/usr/local/lib中添加。</p>\n<p>配置完成以后，就可以写代码了，进入main.cpp文件，将main中修改如下</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;GL/glew.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;GLFW/glfw3.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Render</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    glClearColor(<span class=\"number\">0.0f</span>, <span class=\"number\">0.0f</span>, <span class=\"number\">0.0f</span>, <span class=\"number\">1.0f</span>);</span><br><span class=\"line\">    glClear(GL_COLOR_BUFFER_BIT);</span><br><span class=\"line\">    glBegin(GL_TRIANGLES);</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        glColor3f(<span class=\"number\">1.0</span>,<span class=\"number\">0.0</span>,<span class=\"number\">0.0</span>);</span><br><span class=\"line\">        glVertex2f(<span class=\"number\">0</span>, <span class=\"number\">.5</span>);</span><br><span class=\"line\">        glColor3f(<span class=\"number\">0.0</span>,<span class=\"number\">1.0</span>,<span class=\"number\">0.0</span>);</span><br><span class=\"line\">        glVertex2f(<span class=\"number\">-.5</span>,<span class=\"number\">-.5</span>);</span><br><span class=\"line\">        glColor3f(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>);</span><br><span class=\"line\">        glVertex2f(<span class=\"number\">.5</span>, <span class=\"number\">-.5</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    glEnd();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span> </span>&#123;</span><br><span class=\"line\">    GLFWwindow* win;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!glfwInit())&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    win = glfwCreateWindow(<span class=\"number\">640</span>, <span class=\"number\">480</span>, <span class=\"string\">\"OpenGL Base Project\"</span>, <span class=\"literal\">NULL</span>, <span class=\"literal\">NULL</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!win)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        glfwTerminate();</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(EXIT_FAILURE);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!glewInit())</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    glfwMakeContextCurrent(win);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!glfwWindowShouldClose(win))&#123;</span><br><span class=\"line\">        Render();</span><br><span class=\"line\">        glfwSwapBuffers(win);</span><br><span class=\"line\">        glfwPollEvents();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    glfwTerminate();</span><br><span class=\"line\">    <span class=\"built_in\">exit</span>(EXIT_SUCCESS);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>见证奇迹的时刻到了，运行，你将会看到一个漂亮的三角形<img src=\"https://img2018.cnblogs.com/blog/552616/201908/552616-20190815143156518-737968913.png\" alt></p>\n<p>mac 工程搭建，就说这么多了。</p>\n<hr>\n<p>感谢以下文章的作者：</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/24529016\" target=\"_blank\" rel=\"noopener\">Mac系统下配置OpenGL环境（小白自学版）</a></p>\n<p><a href=\"http://blog.shenyuanluo.com/OpenGLEnvironment.html\" target=\"_blank\" rel=\"noopener\">OpenGL学习笔记（二）—— (macOS)环境搭建</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"MAC-OpenGL-环境搭建\"><a href=\"#MAC-OpenGL-环境搭建\" class=\"headerlink\" title=\"MAC OpenGL 环境搭建\"></a>MAC OpenGL 环境搭建</h1><h2 id=\"基础库介绍\"><a href=\"#基础库介绍\" class=\"headerlink\" title=\"基础库介绍\"></a>基础库介绍</h2><p>先要安装两个库一个是GLEW（OpenGL Extension Wrangler Library），另外一个是GLFW（Graphics Library Framework）</p>\n<h3 id=\"GLEW\"><a href=\"#GLEW\" class=\"headerlink\" title=\"GLEW\"></a>GLEW</h3><p>譯自英文-OpenGL擴展Wrangler庫是一個跨平台的C / C ++庫，可幫助查詢和加載OpenGL擴展。 GLEW提供了高效的運行時機制，用於確定目標平台上支持哪些OpenGL擴展。所有OpenGL擴展都在一個頭文件中公開，該文件是從官方擴展名列表機器生成的</p>\n<h3 id=\"GLFW\"><a href=\"#GLFW\" class=\"headerlink\" title=\"GLFW\"></a>GLFW</h3><p>GLFW 是配合 OpenGL 使用的轻量级工具程序库，缩写自 Graphics Library Framework（图形库框架）。GLFW 的主要功能是创建并管理窗口和 OpenGL 上下文，同时还提供了处理手柄、键盘、鼠标输入的功能。</p>\n<h2 id=\"进入安装步骤\"><a href=\"#进入安装步骤\" class=\"headerlink\" title=\"进入安装步骤\"></a>进入安装步骤</h2><h3 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h3><p>要进行安装的话需要先安装CMake，可以选择使用GUI 方式 或者命令行的方式。GUI可以在这里<a href=\"https://cmake.org/download/\" target=\"_blank\" rel=\"noopener\">下载</a>，命令行的方式的话，可以用brew来安装，方式如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install cmake</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装GLEW\"><a href=\"#安装GLEW\" class=\"headerlink\" title=\"安装GLEW\"></a>安装GLEW</h3><p>首先在这里下载<a href=\"http://glew.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">源码</a>，下载以后，解压文件，然后进入到文件所在路径，打开终端进入到此路径，执行命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装GLFW\"><a href=\"#安装GLFW\" class=\"headerlink\" title=\"安装GLFW\"></a>安装GLFW</h3><p>首先在<a href=\"https://www.glfw.org/download.html\" target=\"_blank\" rel=\"noopener\">这里</a>下载源码，我们可以选择直接下载编译好的库，也可以下载源文件然后通过camke来自己编译，区别是如果用cmake库的话，在执行成功以后，会直接将生成的库与头文件分别添加到系统路径，也就是/usr/local/include和/usr/local/lib。这里就自己选择方式了。我在这里介绍利用make工具，自己编译的方式</p>\n<p>打开cmake 的gui工具，在source code选择下载的glfw路径，这一步需要在这个路径创建一个build目录，用于存放生成的文件。然后在browse build路径选择我们刚才创建的路径，点击configure。<br><img src=\"https://img2018.cnblogs.com/blog/552616/201908/552616-20190815143441915-1128090430.png\" alt></p>\n<p>生成成功会出现如下效果</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/552616/201908/552616-20190815143348522-1218740224.png\" alt></p>\n<p>接下来从终端进入到build目录，没错就是刚才我们创建的build，输入如下指令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo make</span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n\n<p>执行成功后，剩成的.a文件与头文件就都放到/usr/local/include和/usr/local/lib了。</p>\n<p>环境安装好以后，应该是这个样子的</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/552616/201908/552616-20190815143328995-1467734221.png\" alt></p>\n<p>至此，环境安装完毕，接下来就是加入到工程了</p>\n<h2 id=\"加入工程\"><a href=\"#加入工程\" class=\"headerlink\" title=\"加入工程\"></a>加入工程</h2><h3 id=\"配置搜索路径\"><a href=\"#配置搜索路径\" class=\"headerlink\" title=\"配置搜索路径\"></a>配置搜索路径</h3><p>首先我们创建一个command line的工程，然后在build setting里这只user search path，在user search path中设置为：/usr/local/include，这里一定要注意不能选择递归查找，否则会出错。然后设置library search path为：/usr/local/lib。设置这个的作用是工程中明确工程中查找头文件和.a文件的路径。</p>\n<h3 id=\"添加要链接的framework\"><a href=\"#添加要链接的framework\" class=\"headerlink\" title=\"添加要链接的framework\"></a>添加要链接的framework</h3><p>添加以下库文件：</p>\n<ul>\n<li>Cocoa.framework</li>\n<li>OpenGL.framwork</li>\n<li>GLUT.framework</li>\n<li>CoreVideo.framework</li>\n<li>IOKit.framework</li>\n<li>libglfw3.a</li>\n<li>libGLEW.a</li>\n</ul>\n<p><img src=\"https://img2018.cnblogs.com/blog/552616/201908/552616-20190815143224335-1252417188.png\" alt=\"库文件\"></p>\n<p>其中，libglfw3.a、libGLEW.a需要点击 add another，然后进入要路径/usr/local/lib中添加。</p>\n<p>配置完成以后，就可以写代码了，进入main.cpp文件，将main中修改如下</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;GL/glew.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;GLFW/glfw3.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Render</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    glClearColor(<span class=\"number\">0.0f</span>, <span class=\"number\">0.0f</span>, <span class=\"number\">0.0f</span>, <span class=\"number\">1.0f</span>);</span><br><span class=\"line\">    glClear(GL_COLOR_BUFFER_BIT);</span><br><span class=\"line\">    glBegin(GL_TRIANGLES);</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        glColor3f(<span class=\"number\">1.0</span>,<span class=\"number\">0.0</span>,<span class=\"number\">0.0</span>);</span><br><span class=\"line\">        glVertex2f(<span class=\"number\">0</span>, <span class=\"number\">.5</span>);</span><br><span class=\"line\">        glColor3f(<span class=\"number\">0.0</span>,<span class=\"number\">1.0</span>,<span class=\"number\">0.0</span>);</span><br><span class=\"line\">        glVertex2f(<span class=\"number\">-.5</span>,<span class=\"number\">-.5</span>);</span><br><span class=\"line\">        glColor3f(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>);</span><br><span class=\"line\">        glVertex2f(<span class=\"number\">.5</span>, <span class=\"number\">-.5</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    glEnd();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span> </span>&#123;</span><br><span class=\"line\">    GLFWwindow* win;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!glfwInit())&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    win = glfwCreateWindow(<span class=\"number\">640</span>, <span class=\"number\">480</span>, <span class=\"string\">\"OpenGL Base Project\"</span>, <span class=\"literal\">NULL</span>, <span class=\"literal\">NULL</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!win)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        glfwTerminate();</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(EXIT_FAILURE);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!glewInit())</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    glfwMakeContextCurrent(win);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!glfwWindowShouldClose(win))&#123;</span><br><span class=\"line\">        Render();</span><br><span class=\"line\">        glfwSwapBuffers(win);</span><br><span class=\"line\">        glfwPollEvents();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    glfwTerminate();</span><br><span class=\"line\">    <span class=\"built_in\">exit</span>(EXIT_SUCCESS);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>见证奇迹的时刻到了，运行，你将会看到一个漂亮的三角形<img src=\"https://img2018.cnblogs.com/blog/552616/201908/552616-20190815143156518-737968913.png\" alt></p>\n<p>mac 工程搭建，就说这么多了。</p>\n<hr>\n<p>感谢以下文章的作者：</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/24529016\" target=\"_blank\" rel=\"noopener\">Mac系统下配置OpenGL环境（小白自学版）</a></p>\n<p><a href=\"http://blog.shenyuanluo.com/OpenGLEnvironment.html\" target=\"_blank\" rel=\"noopener\">OpenGL学习笔记（二）—— (macOS)环境搭建</a></p>\n"},{"title":"initial blog","date":"2019-08-19T15:30:23.000Z","_content":"","source":"_posts/initial-blog.md","raw":"---\ntitle: initial blog\ndate: 2019-08-19 15:30:23\ntags:\ncategories:\n- [Objective-C]\n- [net]\n- [OpenGL]\n- [sundry]\n- [Cocoa]\n---\n","slug":"initial-blog","published":1,"updated":"2019-08-19T07:32:37.963Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzje0a6w0004vms6vn14wo2b","content":"","site":{"data":{}},"excerpt":"","more":""}],"PostAsset":[],"PostCategory":[{"post_id":"cjzje0a6m0000vms6jlvxcvru","category_id":"cjzje0a6t0003vms6a6q53ptv","_id":"cjzje0a6y0007vms63cfstxet"},{"post_id":"cjzje0a6t0002vms6q8n2xjtf","category_id":"cjzje0a6x0005vms676yjo5i0","_id":"cjzje0a6y0008vms6g5uj945t"},{"post_id":"cjzje0a6w0004vms6vn14wo2b","category_id":"cjzje0a6y0006vms636qh4014","_id":"cjzje0a6z000bvms6onppv8x5"},{"post_id":"cjzje0a6w0004vms6vn14wo2b","category_id":"cjzje0a6z0009vms62pv9n8nw","_id":"cjzje0a6z000cvms6npyw4p00"},{"post_id":"cjzje0a6w0004vms6vn14wo2b","category_id":"cjzje0a6x0005vms676yjo5i0","_id":"cjzje0a6z000dvms6z8tq2mxh"},{"post_id":"cjzje0a6w0004vms6vn14wo2b","category_id":"cjzje0a6t0003vms6a6q53ptv","_id":"cjzje0a70000evms6ep4sgsel"},{"post_id":"cjzje0a6w0004vms6vn14wo2b","category_id":"cjzje0a6z000avms6d00lmrek","_id":"cjzje0a70000fvms6441j4faq"}],"PostTag":[],"Tag":[]}}